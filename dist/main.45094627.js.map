{"version":3,"sources":["main.js"],"names":["$lastli","$","$sitelist","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","find","remove","forEach","node","index","$li","insertBefore","on","e","window","open","stopPropagation","splice","prompt","test","alert","indexOf","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.45094627.js","sourceRoot":"..\\src","sourcesContent":["let $lastli = $('.last');//这是最后一个li内容为新增网址\r\nlet $sitelist = $('.sitelist');//这是所有的li的父级ul\r\nconst x = localStorage.getItem('x');\r\nconst xObject = JSON.parse(x);\r\nconst hashMap = xObject || [\r\n    { logo: 'a', url: 'https://www.acfun.cn/' },\r\n    { logo: 'b', url: 'https://www.bilibili.com/'},\r\n    { logo: 'j', url: 'https://juejin.cn/' },\r\n    { logo: 'z', url: 'https://zh.javascript.info/' },\r\n    { logo: 'd', url: 'https://developer.mozilla.org/zh-CN/'}\r\n]\r\n\r\n//简化URL\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '');//使用正则表达式简化/后面的内容\r\n}\r\nconst render = () => {\r\n    $sitelist.find('li:not(.last)').remove();\r\n    hashMap.forEach((node,index) => {\r\n        const $li = $(` \r\n            <li>\r\n                <div class=\"site\">\r\n                    <div class=\"logo\">${node.logo[0]}</div>\r\n                    <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-close\"></use\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </li>`\r\n        ).insertBefore($lastli);\r\n        $li.on('click', (e) => {\r\n            window.open(node.url);\r\n        });\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation();\r\n            hashMap.splice(index,1);\r\n            render();\r\n        })\r\n    })\r\n}\r\nrender();\r\n\r\n$('.addButton').on('click', () => {\r\n    //获取网址\r\n    //不能有中文\r\n    let url = window.prompt('请输入网址！');\r\n    if (/.*[\\u4e00-\\u9fa5]+.*$/.test(url)) {\r\n        url = null;\r\n        alert(\"请按照网站的形式输入，不能包含中文！\");\r\n    }\r\n    else if (url.indexOf('http') !== 0) {\r\n        url = 'http://' + url;\r\n    }\r\n    //生成新的li并放在最后一个li的前面\r\n    hashMap.push({ logo: simplifyUrl(url)[0], url: url });\r\n    render();\r\n});\r\n\r\nwindow.onbeforeunload = () => {\r\n    //将哈希变成字符串存储\r\n    const string = JSON.stringify(hashMap);\r\n    window.localStorage.setItem('x', string);\r\n};\r\n{/* \r\n<svg class=\"icon\">\r\n    <use xlink:href=\"#icon-diandian\"></use>\r\n</svg> */}\r\n$(document).on('keypress', (e) => {\r\n    const key = e.key;//可以简写为 const{key} =e;\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        \r\n        if (hashMap[i].logo.toLowerCase() ===key) {\r\n            window.open(hashMap[i].url);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}